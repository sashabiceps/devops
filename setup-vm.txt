# Atualiza os pacotes existentes
sudo apt-get update -y && sudo apt-get upgrade -y

# Instala dependências básicas
sudo apt-get install -y \
    curl \
    wget \
    git \
    unzip \
    net-tools \
    openjdk-17-jdk \
    maven

## Instalação do Docker
sudo apt-get install docker.io
sudo apt-get install -y \
    ca-certificates \
    curl \
    gnupg \
    lsb-release

# Adiciona a chave GPG oficial do Docker
sudo mkdir -m 0755 -p /etc/apt/keyrings
curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg

# Configura o repositório
  deb [arch="$(dpkg --print-architecture)" signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \
  $(. /etc/os-release && echo "$VERSION_CODENAME")" stable | \
  sudo tee /etc/apt/sources.list.d/docker.list > /dev/null

# Instala o Docker Engine
sudo apt-get update -y
sudo apt-get install -y docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin

# Adiciona o usuário ao grupo docker
sudo usermod -aG docker $USER

## Instalação da Azure CLI
curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash

#Reconectar a VM
exit

## Configuração do Projeto
# Clona o repositório (substitua pela URL do seu repositório)
git clone https://github.com/Pablo0703/Challenge_Java.git
cd Challenge_Java/ChallengeMottu

#Mover Dockerfile para subpasta
mv Dockerfile ChallengeMottu/
cd ChallengeMottu/

# Constrói a imagem Docker
docker build -t challenge-app .

# Executa o container
docker run -d --name mottu-app -p 8080:8080 challenge-app

# Verifica se está rodando
docker ps

#Abrir portas para acesso externo
az vm open-port \
  --resource-group rg-devops \
  --name vm-challenge \
  --port 8080 \
  --priority 900

#Verificar funcionamento
curl http://localhost:8080/motos

